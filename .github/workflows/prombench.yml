on: repository_dispatch
name: Prombench Workflow
jobs:
  benchmark_start:
    name: Benchmark Start
    if: github.event.action == 'prombench_start'
    runs-on: ubuntu-latest
    steps:
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    - name: Post log info as a comment
      id: comment_log
      uses: docker://prombench/comment-monitor:0.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ORG: prometheus-community
        GITHUB_REPO: prometheus
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
        COMMENT_TEMPLATE: |
          **GitHub Actions logs:**  [{{ index . "GITHUB_SHA" }}/checks](https://github.com/{{ index . "GITHUB_REPOSITORY" }}/commit/{{ index . "GITHUB_SHA" }}/checks)
    - name: Run make deploy to start test
      id: make_deploy
      uses: docker://prombench/prombench:2.0.2
      env:
        AUTH_FILE: ${{ secrets.PROMBENCH_GKE_AUTH }}
        PROJECT_ID: prombench-gsoc
        CLUSTER_NAME: ghaction-prom
        ZONE: us-central1-a
        DOMAIN_NAME: prombench.geekodour.xyz
        TEST_INFRA_REPO: https://github.com/prometheus/prombench.git
        GITHUB_ORG: prometheus-community
        GITHUB_REPO: prometheus
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
        RELEASE: ${{ github.event.client_payload.RELEASE }}
      with:
        args: >-
          until make all_nodepools_deleted; do echo "waiting for nodepools to be deleted"; sleep 10; done;
          make deploy;
    - name: Post comment if make deploy failed
      id: fail_notification
      if: failure()
      uses: docker://prombench/comment-monitor:0.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ORG: prometheus-community
        GITHUB_REPO: prometheus
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
        COMMENT_TEMPLATE: |
          Prombench test **start** failed. Please see logs for more info.

          **GitHub Actions logs:**  [{{ index . "GITHUB_SHA" }}/checks](https://github.com/{{ index . "GITHUB_REPOSITORY" }}/commit/{{ index . "GITHUB_SHA" }}/checks)
  #############################
  # Jobs for stopping benchmark
  #############################
  benchmark_cancel:
    name: Benchmark Cancel
    if: github.event.action == 'prombench_stop'
    runs-on: ubuntu-latest
    steps:
    - name: Post log info as a comment
      id: comment_log
      uses: docker://prombench/comment-monitor:0.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ORG: prometheus-community
        GITHUB_REPO: prometheus
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
        COMMENT_TEMPLATE: |
          **GitHub Actions logs:**  [{{ index . "GITHUB_SHA" }}/checks](https://github.com/{{ index . "GITHUB_REPOSITORY" }}/commit/{{ index . "GITHUB_SHA" }}/checks)
    - name: Run make clean to stop test
      id: make_clean
      uses: docker://prombench/prombench:2.0.2
      env:
        AUTH_FILE: ${{ secrets.PROMBENCH_GKE_AUTH }}
        PROJECT_ID: prombench-gsoc
        CLUSTER_NAME: ghaction-prom
        ZONE: us-central1-a
        TEST_INFRA_REPO: https://github.com/prometheus/prombench.git
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
      with:
        args: >-
          until make all_nodepools_running; do echo "waiting for nodepools to be created"; sleep 10; done;
          make clean;
    - name: Post comment if make clean failed
      id: fail_notification
      if: failure()
      uses: docker://prombench/comment-monitor:0.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ORG: prometheus-community
        GITHUB_REPO: prometheus
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
        COMMENT_TEMPLATE: |
          Prombench test **cancel** failed. Please see logs for more info."

          **GitHub Actions logs:**  [{{ index . "GITHUB_SHA" }}/checks](https://github.com/{{ index . "GITHUB_REPOSITORY" }}/commit/{{ index . "GITHUB_SHA" }}/checks)
  ###############################
  # Jobs for restarting benchmark  
  ###############################
  benchmark_restart:
    name: Benchmark Restart
    if: github.event.action == 'prombench_restart'
    runs-on: ubuntu-latest
    steps:
    - name: Post log info as a comment
      id: comment_log
      uses: docker://prombench/comment-monitor:0.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ORG: prometheus-community
        GITHUB_REPO: prometheus
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
        COMMENT_TEMPLATE: |
          **GitHub Actions logs:**  [{{ index . "GITHUB_SHA" }}/checks](https://github.com/{{ index . "GITHUB_REPOSITORY" }}/commit/{{ index . "GITHUB_SHA" }}/checks)
    - name: Run make clean then make deploy to restart test
      id: make_restart
      uses: docker://prombench/prombench:2.0.2
      env:
        AUTH_FILE: ${{ secrets.PROMBENCH_GKE_AUTH }}
        PROJECT_ID: prombench-gsoc
        CLUSTER_NAME: ghaction-prom
        ZONE: us-central1-a
        DOMAIN_NAME: prombench.geekodour.xyz
        TEST_INFRA_REPO: https://github.com/prometheus/prombench.git
        GITHUB_ORG: prometheus-community
        GITHUB_REPO: prometheus
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
        RELEASE: ${{ github.event.client_payload.RELEASE }}
      with:
        args: >-
          until make all_nodepools_running; do echo "waiting for nodepools to be created"; sleep 10; done;
          make clean;
          until make all_nodepools_deleted; do echo "waiting for nodepools to be deleted"; sleep 10; done;
          make deploy;
    - name: Post comment if make deploy failed
      id: fail_notification
      if: failure()
      uses: docker://prombench/comment-monitor:0.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ORG: prometheus-community
        GITHUB_REPO: prometheus
        PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }}
        COMMENT_TEMPLATE: |
          Prombench test **restart** failed. Please see logs for more info."

          **GitHub Actions logs:**  [{{ index . "GITHUB_SHA" }}/checks](https://github.com/{{ index . "GITHUB_REPOSITORY" }}/commit/{{ index . "GITHUB_SHA" }}/checks)
