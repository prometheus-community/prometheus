on: issue_comment
name: Prombench Cancel Benchmark
jobs:
  pre_benchmark_cancel:
    name: Pre Benchmark Cancel
    runs-on: ubuntu-latest
    steps:
    - name: Validate comment
      id: validate_comment
      uses: docker://prombench/comment-monitor:0.0.1
      env:
        COMMENT_TEMPLATE: |
          Benchmark cancel is in progress
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: >-
          "(?mi)^/prombench\s+cancel\s*$"
  benchmark_cancel:
    name: Benchmark Cancel
    needs: pre_benchmark_cancel
    runs-on: ubuntu-latest
    steps:
    - name: Extract arguments
      id: extract_arguments
      uses: docker://prombench/comment-monitor:0.0.1
      with:
        args: >-
          "(?mi)^/prombench\s+cancel\s*$"
    - name: Run make clean to stop test
      id: make_clean
      uses: docker://prombench/prombench:2.0.2
      env:
        AUTH_FILE: ${{ secrets.AUTH_FILE }}
        PROJECT_ID: prombench-gsoc
        CLUSTER_NAME: ghaction-prom
        ZONE: us-central1-a
        TEST_INFRA_REPO: https://github.com/testpromorg/prombench.git
      with:
        args: >-
          export PR_NUMBER=$(cat /github/home/commentMonitor/PR_NUMBER);
          until make all_nodepools_running; do echo "waiting for nodepools to be created"; sleep 10; done;
          make clean;
    - name: Post comment if delete_test_ss failed
      id: fail_notification
      if: failure()
      uses: docker://prombench/comment-monitor:0.0.1
      env:
        COMMENT_TEMPLATE: "prombench cancel failed"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
